--- !ruby/object:Gem::Specification 
name: authlogic
version: !ruby/object:Gem::Version 
  version: 1.0.0
platform: ruby
authors: 
- Ben Johnson of Binary Logic
autorequire: 
bindir: bin
cert_chain: []

date: 2008-11-04 00:00:00 -08:00
default_executable: 
dependencies: 
- !ruby/object:Gem::Dependency 
  name: activesupport
  type: :runtime
  version_requirement: 
  version_requirements: !ruby/object:Gem::Requirement 
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        version: "0"
    version: 
- !ruby/object:Gem::Dependency 
  name: activerecord
  type: :runtime
  version_requirement: 
  version_requirements: !ruby/object:Gem::Requirement 
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        version: "0"
    version: 
- !ruby/object:Gem::Dependency 
  name: echoe
  type: :runtime
  version_requirement: 
  version_requirements: !ruby/object:Gem::Requirement 
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        version: "0"
    version: 
description: Framework agnostic object based authentication solution that handles all of the non sense for you. It's as easy as ActiveRecord is with a database.
email: bjohnson@binarylogic.com
executables: []

extensions: []

extra_rdoc_files: 
- CHANGELOG.rdoc
- lib/authlogic/active_record/acts_as_authentic.rb
- lib/authlogic/active_record/authenticates_many.rb
- lib/authlogic/active_record/scoped_session.rb
- lib/authlogic/controller_adapters/abstract_adapter.rb
- lib/authlogic/controller_adapters/merb_adapter.rb
- lib/authlogic/controller_adapters/rails_adapter.rb
- lib/authlogic/session/active_record_trickery.rb
- lib/authlogic/session/base.rb
- lib/authlogic/session/callbacks.rb
- lib/authlogic/session/config.rb
- lib/authlogic/session/errors.rb
- lib/authlogic/session/scopes.rb
- lib/authlogic/sha512_crypto_provider.rb
- lib/authlogic/version.rb
- lib/authlogic.rb
- README.rdoc
files: 
- CHANGELOG.rdoc
- init.rb
- lib/authlogic/active_record/acts_as_authentic.rb
- lib/authlogic/active_record/authenticates_many.rb
- lib/authlogic/active_record/scoped_session.rb
- lib/authlogic/controller_adapters/abstract_adapter.rb
- lib/authlogic/controller_adapters/merb_adapter.rb
- lib/authlogic/controller_adapters/rails_adapter.rb
- lib/authlogic/session/active_record_trickery.rb
- lib/authlogic/session/base.rb
- lib/authlogic/session/callbacks.rb
- lib/authlogic/session/config.rb
- lib/authlogic/session/errors.rb
- lib/authlogic/session/scopes.rb
- lib/authlogic/sha512_crypto_provider.rb
- lib/authlogic/version.rb
- lib/authlogic.rb
- Manifest
- MIT-LICENSE
- Rakefile
- README.rdoc
- test/active_record_acts_as_authentic_test.rb
- test/active_record_authenticates_many_test.rb
- test/fixtures/companies.yml
- test/fixtures/employees.yml
- test/fixtures/projects.yml
- test/fixtures/users.yml
- test/test_helper.rb
- test/user_session_active_record_trickery_test.rb
- test/user_session_base_test.rb
- test/user_session_config_test.rb
- test/user_session_scopes_test.rb
- test_libs/aes128_crypto_provider.rb
- test_libs/mock_controller.rb
- test_libs/mock_cookie_jar.rb
- test_libs/mock_request.rb
- test_libs/ordered_hash.rb
- authlogic.gemspec
has_rdoc: true
homepage: http://github.com/binarylogic/authlogic
post_install_message: 
rdoc_options: 
- --line-numbers
- --inline-source
- --title
- Authlogic
- --main
- README.rdoc
require_paths: 
- lib
required_ruby_version: !ruby/object:Gem::Requirement 
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      version: "0"
  version: 
required_rubygems_version: !ruby/object:Gem::Requirement 
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      version: "1.2"
  version: 
requirements: []

rubyforge_project: authlogic
rubygems_version: 1.2.0
signing_key: 
specification_version: 2
summary: Framework agnostic object based authentication solution that handles all of the non sense for you. It's as easy as ActiveRecord is with a database.
test_files: 
- test/active_record_acts_as_authentic_test.rb
- test/active_record_authenticates_many_test.rb
- test/test_helper.rb
- test/user_session_active_record_trickery_test.rb
- test/user_session_base_test.rb
- test/user_session_config_test.rb
- test/user_session_scopes_test.rb
